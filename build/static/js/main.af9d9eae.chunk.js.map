{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","setPersons","setNotification","className","map","person","key","name","number","onClick","personToDelete","answer","window","confirm","personsService","filter","catch","error","console","log","handlePersonDelete","PersonForm","onSubmit","onNameChange","onNumberChange","value","onChange","type","Filter","Notification","message","App","useState","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notification","useEffect","personService","length","personsToShow","toLowerCase","search","event","target","preventDefault","personObject","find","element","replace","n","changedPerson","concat","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af9d9eae.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n  // const nonExisting = {\n  //   id: 10000,\n  //   name: 'nobody',\n  //   number: '2019-05-30T17:30:31.098Z',\n  // }\n  // return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson}","import React from 'react'\r\nimport personsService from \"../services/persons\"\r\n\r\nconst Persons = ({ persons, setPersons, setNotification }) => {\r\n  const handlePersonDelete = personToDelete => {\r\n    const { id, name } = personToDelete\r\n    const answer = window.confirm(`Delete ${name}?`)\r\n    if (answer) {\r\n      personsService\r\n      .deletePerson(id)\r\n      .then(data => {\r\n        setPersons(persons.filter(person => person.id !== id))\r\n        setNotification(`Deleted ${name}`);\r\n      })\r\n      .catch(error => {\r\n        setNotification(`information of ${name} has alreaddy been removed from server`);\r\n        console.log('fail to delete')\r\n      })\r\n    }\r\n    console.log(answer, id)\r\n  }\r\n\r\n  return (\r\n    <li className='person'>\r\n      {persons.map(person => (\r\n        <p key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => handlePersonDelete(person)}>Delete</button>\r\n        </p>\r\n      ))}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({\r\n  onSubmit,\r\n  name,\r\n  number,\r\n  onNameChange,\r\n  onNumberChange,\r\n  }) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n        <div>\r\n          name: \r\n          <input \r\n            value = {name}\r\n            onChange={onNameChange}/>\r\n        </div>\r\n        <div>\r\n          number: \r\n          <input \r\n            value = {number}\r\n            onChange={onNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ value, onChange}) => {\r\n  return (\r\n    <div>\r\n      filter shown with:\r\n      <input \r\n        value = {value}\r\n        onChange={onChange}/>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notification, setNotification] = useState('Welcome to phonebook')\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n        .then(response => {\n          setPersons(response)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if(persons.find(element => element.name === newName)){\n      const replace = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with the new one?`\n      );\n      if(replace){\n        console.log(replace)\n        const person = persons.find(n => n.name === newName)\n        const changedPerson = { ...person, number: newNumber }\n        console.log('changedPerson', changedPerson)\n        personService\n          .update(person.id, changedPerson)\n          .then(response => {\n            console.log(response)\n            setPersons(persons.map(person => person.id !== response.id ? person : response))\n            setNotification(`Updated ${newName}'s number`);\n          })\n          .catch(error => {\n            console.log('fail')\n          })\n      }\n    }else{\n      personService\n      .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(personObject))\n          setNotification(`Added ${newName}`);\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const personsToShow = newFilter\n    ? persons.filter(person => person.name.toLowerCase().search(newFilter.toLowerCase()) !== -1)\n    : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      \n      <h2>Add a new</h2>\n\n      <PersonForm\n        onSubmit={addPerson}\n        name={newName}\n        number={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} setPersons={setPersons} setNotification={setNotification}/>\n      \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\nimport App from './App'\nimport './index.css'\n\naxios\n  .get('http://localhost:3001/api/persons')\n  .then(response => {\n    const persons = response.data\n    console.log(persons)\n  })\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n)"],"sourceRoot":""}